{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAMlB,SACI,uBACAO,KAAO,OACPC,MAAST,EACTU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,gEAGII,MAAOF,GAHX,cAGdG,EAHc,gBAICA,EAAUC,OAJX,uBAIbC,EAJa,EAIbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCARO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAY,yCAAjB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCHJO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAK,SAAAC,GAEFC,YAAY,WAERJ,EAAS,CACHf,KAAMkB,EACNL,SAAS,MAGhB,UAGZ,CAACpB,IAEGqB,EDrBwBM,CAAa3B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACA,qCACI,qBAAIJ,UAAY,oCAAhB,cAAuDhB,EAAvD,OAECoB,GAAW,mBAAGJ,UAAY,mCAAf,qBAEZ,qBAAKA,UAAY,aAAjB,SAEWH,EAAOJ,KAAK,SAACC,GAAD,OACT,cAAC,EAAD,eAEIA,GADGA,EAAIC,aESlBiB,EAvBO,WAElB,MAAkC1C,mBAAS,CAAC,aAA5C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,YAAgBA,IAC7B,uBACA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAYA,GADJA,Y,MCZhC8B,IAASC,OAAQ,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.5ce2b524.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    \r\n    //Para actualizar los cambios dentro de la caja\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    //Para agregar a la lista\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategory(cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    //retorna los valores y los agrega a la lista\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type = \"text\"\r\n            value = {inputValue}\r\n            onChange = { handleInputChange }\r\n             />\r\n        </form>      \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}","\r\n\r\n export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit =10&api_key=sPhN1ctoWy2Mj91Wh3w7emURGeIXvRCF`;\r\n    const respuesta = await fetch( url );\r\n    const {data} = await respuesta.json();\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    \r\n    return(\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return(\r\n    <>\r\n        <h3 className = \"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n        {loading && <p className = \"animate__animated animate__flash\">Loading</p> }\r\n\r\n        <div className = \"card-grid \">\r\n                {\r\n                   images.map( (img) => (\r\n                      <GifGridItem \r\n                      key = {img.id}\r\n                      {...img} \r\n                      />\r\n                   )) \r\n                }\r\n        </div>\r\n    </>\r\n    )}","import {useEffect, useState} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then(imgs => {\r\n                 \r\n                setTimeout( () => {\r\n\r\n                    setState({\r\n                          data: imgs,\r\n                          loading: false\r\n                   }); \r\n\r\n                }, 3000);   \r\n                   \r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categorias, setCategory] = useState(['OnePunch']);\r\n    //contiene todos los valores retornados de AddCategory y los envia a index\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategory = { setCategory }/>\r\n            <hr/> \r\n            <ol>\r\n                { \r\n                    categorias.map( category => (\r\n                        <GiftGrid \r\n                        key = { category }\r\n                        category ={ category } \r\n                        /> \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render( <GiftExpertApp />, document.getElementById('root'));\n\n"],"sourceRoot":""}